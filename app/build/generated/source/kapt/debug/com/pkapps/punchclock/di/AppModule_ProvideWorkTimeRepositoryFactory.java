// Generated by Dagger (https://dagger.dev).
package com.pkapps.punchclock.di;

import com.pkapps.punchclock.feature_time_tracking.data.local.PunchClockDatabase;
import com.pkapps.punchclock.feature_time_tracking.domain.WorkTimeRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideWorkTimeRepositoryFactory implements Factory<WorkTimeRepository> {
  private final Provider<PunchClockDatabase> databaseProvider;

  public AppModule_ProvideWorkTimeRepositoryFactory(Provider<PunchClockDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public WorkTimeRepository get() {
    return provideWorkTimeRepository(databaseProvider.get());
  }

  public static AppModule_ProvideWorkTimeRepositoryFactory create(
      Provider<PunchClockDatabase> databaseProvider) {
    return new AppModule_ProvideWorkTimeRepositoryFactory(databaseProvider);
  }

  public static WorkTimeRepository provideWorkTimeRepository(PunchClockDatabase database) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideWorkTimeRepository(database));
  }
}
