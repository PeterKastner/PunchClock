plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
}

android {
    namespace 'com.pkapps.punchclock'
    compileSdk 33

    defaultConfig {
        applicationId "com.pkapps.punchclock"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled = true // flag to support new java programming language APIs (i.e. LocalDateTime for minSdk 24
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.4.3'
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    kapt { // Allow references to generated code, see https://developer.android.com/training/dependency-injection/hilt-android#groovy
        correctErrorTypes true
    }

    hilt { // see https://youtrack.jetbrains.com/issue/KT-46940/Kapt-reports-a-warning-The-following-options-were-not-recognized-by-any-processor...#focus=Comments-27-5211169.0-0
        enableAggregatingTask = true // and also see https://dagger.dev/hilt/gradle-setup#aggregating-task
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.core:core-ktx:1.9.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Compose BOM
    def composeBom = platform("androidx.compose:compose-bom:2023.01.00")
    implementation composeBom
    androidTestImplementation composeBom

    // Jetpack Compose dependencies
    // Activity compose
    implementation 'androidx.activity:activity-compose:1.7.0'
    // Other compose dependencies
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.ui:ui-tooling-preview"

    //implementation 'androidx.compose.material3:material3:1.1.0-beta01' // uses specific version for time and date picker composable functions
    implementation 'androidx.compose.material3:material3' // uses compose bom version
    //implementation("androidx.compose.material3:material3-window-size-class:1.1.0-beta01") // windows size artifact to help make the app adaptive
    implementation 'androidx.compose.material3:material3-window-size-class' // uses compose bom version

    implementation("androidx.compose.material:material-icons-core") // material icons core and extended for compose
    implementation("androidx.compose.material:material-icons-extended")

    androidTestImplementation "androidx.compose.ui:ui-test-junit4" // also uses the version specified in compose bom platform, see above

    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"

    // Dagger + Hilt for dependency injection
    implementation "com.google.dagger:hilt-android:2.45"
    kapt "com.google.dagger:hilt-compiler:2.45"

    // Room for using sqlite as database
    def room_version = "2.5.1"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // to use Kotlin annotation processing tool (kapt)
    // Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")

    // coreLibraryDesugaring for using newer java language features
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'

    // Kotlin coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4")

    // Timber for logging
    implementation('com.jakewharton.timber:timber:5.0.1')

    // ViewModel and lifecycle
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1")

    // Navigation
    implementation("androidx.navigation:navigation-compose:2.5.3")
    implementation("androidx.hilt:hilt-navigation-compose:1.0.0")

    // CSV
    implementation("com.github.doyaaaaaken:kotlin-csv-jvm:1.9.0")

    // RevealSwipe for compose
    implementation("de.charlex.compose:revealswipe:1.1.0")

    // Sheets and dialogs for compose
    def sheets_dialogs_version = "1.1.1"
    implementation("com.maxkeppeler.sheets-compose-dialogs:core:$sheets_dialogs_version")
    implementation("com.maxkeppeler.sheets-compose-dialogs:duration:$sheets_dialogs_version")
    implementation("com.maxkeppeler.sheets-compose-dialogs:input:$sheets_dialogs_version")

}